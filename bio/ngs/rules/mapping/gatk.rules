# vim: syntax=python tabstop=4 expandtab
# coding: utf-8


"""
GATK based postprocessing of BAM files. Indels can be realigned and base qualities
can be recalibrated.

For usage, include this in your workflow.

Expects a global variable config
(see https://bitbucket.org/johanneskoester/snakemake/wiki/Documentation#markdown-header-configuration)
of at least the
following structure, assuming that the desired reference sequence is some genome
to be found under the given path:

{
    "references": {
        "genome": "path/to/genome.fasta"
    },
    "known_variants": {
        "dbsnp": "path/to/dbsnp.vcf"
    },
    "params_gatk": ""
}

The "params_gatk" entry is optional.
"""


__author__ = "Johannes KÃ¶ster (http://johanneskoester.bitbucket.org)"
__license__ = "MIT"



def _get_ref(wildcards):
    return config["references"][wildcards.reference]


rule gatk_realign_info:
    input:
        "mapping/{prefix}.marked.duplicates.bam.bai",
        ref=config["references"],
        bam="mapping/{prefix}.marked.duplicates.bam"
    output:
        temp("mapping/{prefix}.realign.intervals")
    params:
        interval=config.get("interval", "")
    log:
        "mapping/log/{prefix}.realign_info.log"
    threads: 8
    shell:
        "module load GATK"
        "java -Xmx8g -Djava.io.tmpdir=/lscratch/{{prefix}} -jar $GATK_HOME/GenomeAnalysisTK.jar"
        "-T RealignerTargetCreator"
        "-R {input.ref} "
        "-L {params.interval}"
        "-nt {threads} "
        "-I {input.bam} -known {config[known_variants][dbsnp]} "
        "-o {output} >& {log}"

java -Xmx16g -Djava.io.tmpdir=/scratch/cooperjam/temp -jar $GATK_HOME/GenomeAnalysisTK.jar \
-T RealignerTargetCreator \
-R /fdb/GATK_resource_bundle/b37/human_g1k_v37.fasta \
-I $TEMP/${SAMPLE_NAME}_marked_dup.bam \
-I $TEMP/${NORMAL}_marked_dup.bam \
-L /data/cooperjam/Aligent_V4_V5_exome_padded_overlap_b37lifted.bed \
-known /fdb/GATK_resource_bundle/b37-2.8/Mills_and_1000G_gold_standard.indels.b37.vcf \
-o $TEMP/realignment_targets.list


rule gatk_realign_bam:
    input:
        ref=config["references"],
        bam="mapping/{prefix}.marked.duplicates.bam",
        intervals="mapping/{prefix}.realign.intervals"
    output:
        "mapping/{prefix}.realigned.bam"
    log:
        "mapping/log/{prefix}.realign.log"
    shell:
        "module load GATK"
        "java -Xmx8g -Djava.io.tmpdir=/lscratch/{{prefix}} -jar $GATK_HOME/GenomeAnalysisTK.jar"
        "-T IndelRealigner -R {input.ref}  "
        "--disable_bam_indexing "
        "-I {input.bam} -targetIntervals {input.intervals} "
        "-o {output} >& {log}"


rule gatk_recalibrate_info:
    input:
        ref=config["references"],
        bam="mapping/{prefix}.realigned.bam"
    output:
        temp("mapping/{prefix}.recalibrate.grp")
    params:
        interval=config.get("interval", "")
    log:
        "mapping/log/{prefix}.recalibrate_info.log"
    threads: 8
    shell:
        "module load GATK"
        "java -Xmx8g -Djava.io.tmpdir=/lscratch/{{prefix}} -jar $GATK_HOME/GenomeAnalysisTK.jar"
        "-T BaseRecalibrator -R {input.ref} -L {params.interval} "
        "-nct {threads} "
        "-I {input.bam} -knownSites {config[known_variants][dbsnp]} "
        " -knownSites {config[known_variants][mills]} "
        "-o {output} >& {log}"
        "-filterMBQ"

rule gatk_recalibrate_bam:
    input:
        ref=config["references"],
        bam="mapping/{prefix}.realigned.bam",
        grp="mapping/{prefix}.recalibrate.grp"
    output:
        "mapping/{prefix}.recalibrated.bam"
    params:
        custom=config.get("params_gatk", "")
    log:
        "mapping/log/{prefix}.recalibrate.log"
    threads: 8
    shell:
        "module load GATK"
        "java -Xmx8g -Djava.io.tmpdir=/lscratch/{{prefix}} -jar $GATK_HOME/GenomeAnalysisTK.jar"
        "-T PrintReads -R {input.ref} {params.custom} "
        "-nct {threads} "
        "--disable_bam_indexing "
        "-I {input.bam} -BQSR {input.grp} "
        "-o {output} >& {log}"
        "-filterMBQ"


