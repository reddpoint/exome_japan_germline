# vim: syntax=python tabstop=4 expandtab
# coding: utf-8


"""
GATK haplotype calling using the workflow suggested in 
https://www.broadinstitute.org/gatk/guide/topic?name=methods#methods3893
Needs at least GATK 3.0, available in your PATH as "gatk".

For usage, include this in your workflow.

Expects a global variable config
(see https://bitbucket.org/johanneskoester/snakemake/wiki/Documentation#markdown-header-configuration)
of at least the
following structure, assuming that the desired reference sequence is some genome
to be found under the given path, and two units A and B have been sequenced.
The heterozygosity parameters show the default values for homo sapiens.


{
    "references": {
        "genome": "path/to/genome.fasta"
    },
    "samples": {
        "A": ["A"],
        "B": ["B"]
    },
    "units": {
        "A":
            ["path/to/A_R1.fastq.gz", "path/to/A_R2.fastq.gz"],
        "B":
            ["path/to/B.fastq.gz"]
    },
    "known_variants": {
        "dbsnp": "path/to/dbsnp.vcf"
    },
    "heterozygosity": 0.001,
    "indel_heterozygosity": 1.25E-4
}

Note the separation between samples and units that allows to have more than
one sequencing run for each sample, or multiple lanes per sample.
"""


__author__ = "Johannes KÃ¶ster (http://johanneskoester.bitbucket.org)"
__license__ = "MIT"


def _get_ref(wildcards):
    return config["references"][wildcards.reference]


def _sample_to_units(pattern):
    def apply(wildcards):
        return expand(
            pattern, reference=wildcards.reference,
            unit=config["samples"][wildcards.sample])
    return apply


def _gatk_multi_arg(flag, files):
    flag += " "
    return " ".join(flag + f for f in files)


rule gatk_haplotype_caller:
    input:
        _sample_to_units("mapping/{reference}/units/{unit}.sorted.realigned.recalibrated.bam.bai"),
        ref=_get_ref,
        bams=_sample_to_units("mapping/{reference}/units/{unit}.sorted.realigned.recalibrated.bam")
    output:
        gvcf="variant_calling/{reference}/{sample}.gvcf",
        idx="variant_calling/{reference}/{sample}.gvcf.idx"
    params:
        custom=config.get("params_gatk", "")
    log:
        "variant_calling/log/{reference}/{sample}.genotype_info.log"
    threads: 2  # haplotype caller currently does not reliably use more than 2 threads
    run:
        bams = _gatk_multi_arg("-I", input.bams)
        shell(
            "gatk -T HaplotypeCaller -R {input.ref} {bams} {params.custom} "
            "--emitRefConfidence GVCF --variant_index_type LINEAR "
            "--heterozygosity {config[heterozygosity]} "
            "--indel_heterozygosity {config[indel_heterozygosity]} "
            "--dbsnp {config[known_variants][dbsnp]} -nct {threads} "
            "--variant_index_parameter 128000 -o {output.gvcf} >& {log}")


rule gatk_genotyping:
    input:
        ref=_get_ref,
        gvcfs=expand(
            "variant_calling/{{reference}}/{sample}.gvcf",
            sample=config["samples"])
    output:
        "variant_calling/{reference}/all.vcf"
    params:
        custom=config.get("params_gatk", "")
    log:
        "variant_calling/log/{reference}/all.genotype.log"
    threads: 16
    run:
        gvcfs = _gatk_multi_arg("--variant", input.gvcfs)
        shell(
            "gatk -T GenotypeGVCFs {gvcfs} -nt {threads} {params.custom} "
            "-R {input.ref} "
            "--dbsnp {config[known_variants][dbsnp]} -o {output} >& {log}")
